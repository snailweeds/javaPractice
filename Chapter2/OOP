객체: 의사나 행위가 미치는 대상, 데이터의 단위, 객체 지향 프로그램의 대상, 생성된 인스턴스
클래스: 객체의 청사진, 객체를 프로그래밍 하기위해 코드로 정의해 놓은 상태
객체의 속성은 클래스의 멤버 변수로 선언

스택: 함수가 호출될 때 지역 변수들이 사용하는 메모리, 함수의 수행이 끝나면 자동으로 반환 되는 메모리
메서드(멤버 함수): 객체의 기능을 구현하기 위해 클래스 내부에 구현되는 함수, 메서드를 구현함으로써 객체의 기능이 구현
멤버 변수: 클래스의 속성, 특성
참조 변수: 메모리에 생성된 인스턴스를 가리키는 변수
참조 값: 생성된 인스턴스의 메모리 주소 값

인스턴스: 클래스는 객체의 속성을 정의 하고, 기능을 구현하여 만들어 놓은 코드 상태, 각각 다른 멤버 변수 값, new 키워드를 사용하여 인스턴스 생성
힙 메모리: 생성된 인스턴스는 동적 메모리(heap memory) 에 할당, 하나의 클래스로 부터 여러개의 인스턴스가 생성되고 각각 다른 메모리 주소를 가지게 됨

생성자(constructor): <class_name>([<argument_list]){[<statements]}, 생성자는 일반 함수처럼 기능을 호출하는 것이 아니고 객체를 생성하기 위해 new 와 함께 호출, 객체가 생성될 때 변수나 상수를 초기화 하거나 다른 초기화 기능을 수행하는 메서드를 호출, 생성자는 반환 값이 없고, 클래스의 이름과 동일
기본 생성자(default constructor): 클래스에는 반드시 적어도 하나 이상의 생성자가 존재, 클래스에 생성자를 구현하지 않아도 new 키워드와 함께 생성자를 호출할 수 있음, 매개 변수가 없음, 구현부가 없음
컴파일러가 제공해 주는 기본 생성자외에 필요에 의해 생성자를 직접 구현 할 수 있음

overloading: 생성자 정의, 생성자를 구현해서 사용, 생성자를 호출하는 코드(client 코드)에서 여러 생성자 중 필요에 따라 호출해서 사용할 수 있음

참조 자료형: 클래스형으로 변수를 선언, 기본 자료형은 사용하는 메모리의 크기가 정해져 있지만, 참조 자료형은 클래스에 따라 다름, 참조 자료형을 사용 할때는 해당 변수에 대해 생성하여야 함